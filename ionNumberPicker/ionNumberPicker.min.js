/*! number picker (1.0.1). (C) 2016 Stern Ophir. Not Free For Use! */
;
/*! number picker (1.0.1). (C) 2016 Stern Ophir. Not Free For Use! */
;!function (r) {
    function q(e) {
        var c = e.length, f = p.type(e);
        return "function" === f || p.isWindow(e) ? !1 : 1 === e.nodeType && c ? !0 : "array" === f || 0 === c || "number" == typeof c && c > 0 && c - 1 in e
    }

    if (!r.jQuery) {
        var p = function (d, c) {
            return new p.fn.init(d, c)
        };
        p.isWindow = function (b) {
            return null != b && b == b.window
        }, p.type = function (b) {
            return null == b ? b + "" : "object" == typeof b || "function" == typeof b ? n[l.call(b)] || "object" : typeof b
        }, p.isArray = Array.isArray || function (b) {
                return "array" === p.type(b)
            }, p.isPlainObject = function (e) {
            var c;
            if (!e || "object" !== p.type(e) || e.nodeType || p.isWindow(e)) {
                return !1
            }
            try {
                if (e.constructor && !m.call(e, "constructor") && !m.call(e.constructor.prototype, "isPrototypeOf")) {
                    return !1
                }
            } catch (f) {
                return !1
            }
            for (c in e) {
            }
            return void 0 === c || m.call(e, c)
        }, p.each = function (b, w, v) {
            var u, t = 0, s = b.length, i = q(b);
            if (v) {
                if (i) {
                    for (; s > t && (u = w.apply(b[t], v), u !== !1); t++) {
                    }
                } else {
                    for (t in b) {
                        if (u = w.apply(b[t], v), u === !1) {
                            break
                        }
                    }
                }
            } else {
                if (i) {
                    for (; s > t && (u = w.call(b[t], t, b[t]), u !== !1); t++) {
                    }
                } else {
                    for (t in b) {
                        if (u = w.call(b[t], t, b[t]), u === !1) {
                            break
                        }
                    }
                }
            }
            return b
        }, p.data = function (d, c, s) {
            if (void 0 === s) {
                var i = d[p.expando], h = i && o[i];
                if (void 0 === c) {
                    return h
                }
                if (h && c in h) {
                    return h[c]
                }
            } else {
                if (void 0 !== c) {
                    var i = d[p.expando] || (d[p.expando] = ++p.uuid);
                    return o[i] = o[i] || {}, o[i][c] = s, s
                }
            }
        }, p.removeData = function (d, c) {
            var h = d[p.expando], g = h && o[h];
            g && p.each(c, function (f, e) {
                delete g[e]
            })
        }, p.extend = function () {
            var A, z, y, x, w, v, u = arguments[0] || {}, t = 1, s = arguments.length, c = !1;
            for ("boolean" == typeof u && (c = u, u = arguments[t] || {}, t++), "object" != typeof u && "function" !== p.type(u) && (u = {}), t === s && (u = this, t--); s > t; t++) {
                if (null != (w = arguments[t])) {
                    for (x in w) {
                        A = u[x], y = w[x], u !== y && (c && y && (p.isPlainObject(y) || (z = p.isArray(y))) ? (z ? (z = !1, v = A && p.isArray(A) ? A : []) : v = A && p.isPlainObject(A) ? A : {}, u[x] = p.extend(c, v, y)) : void 0 !== y && (u[x] = y))
                    }
                }
            }
            return u
        }, p.queue = function (b, s, i) {
            function h(e, g) {
                var f = g || [];
                return null != e && (q(Object(e)) ? !function (u, t) {
                    for (var x = +t.length, w = 0, v = u.length; x > w;) {
                        u[v++] = t[w++]
                    }
                    if (x !== x) {
                        for (; void 0 !== t[w];) {
                            u[v++] = t[w++]
                        }
                    }
                    return u.length = v, u
                }(f, "string" == typeof e ? [e] : e) : [].push.call(f, e)), f
            }

            if (b) {
                s = (s || "fx") + "queue";
                var c = p.data(b, s);
                return i ? (!c || p.isArray(i) ? c = p.data(b, s, h(i)) : c.push(i), c) : c || []
            }
        }, p.dequeue = function (d, c) {
            p.each(d.nodeType ? [d] : d, function (b, i) {
                c = c || "fx";
                var h = p.queue(i, c), g = h.shift();
                "inprogress" === g && (g = h.shift()), g && ("fx" === c && h.unshift("inprogress"), g.call(i, function () {
                    p.dequeue(i, c)
                }))
            })
        }, p.fn = p.prototype = {
            init: function (b) {
                if (b.nodeType) {
                    return this[0] = b, this
                }
                throw new Error("Not a DOM node.")
            }, offset: function () {
                var a = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {top: 0, left: 0};
                return {
                    top: a.top + (r.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
                    left: a.left + (r.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
                }
            }, position: function () {
                function f() {
                    for (var b = this.offsetParent || document; b && "html" === !b.nodeType.toLowerCase && "static" === b.style.position;) {
                        b = b.offsetParent
                    }
                    return b || document
                }

                var c = this[0], f = f.apply(c), h = this.offset(), g = /^(?:body|html)$/i.test(f.nodeName) ? {
                    top: 0,
                    left: 0
                } : p(f).offset();
                return h.top -= parseFloat(c.style.marginTop) || 0, h.left -= parseFloat(c.style.marginLeft) || 0, f.style && (g.top += parseFloat(f.style.borderTopWidth) || 0, g.left += parseFloat(f.style.borderLeftWidth) || 0), {
                    top: h.top - g.top,
                    left: h.left - g.left
                }
            }
        };
        var o = {};
        p.expando = "velocity" + (new Date).getTime(), p.uuid = 0;
        for (var n = {}, m = n.hasOwnProperty, l = n.toString, k = "Boolean Number String Function Array Date RegExp Object Error".split(" "), j = 0; j < k.length; j++) {
            n["[object " + k[j] + "]"] = k[j].toLowerCase()
        }
        p.fn.init.prototype = p.fn, r.Velocity = {Utilities: p}
    }
}(window), function (b) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = b() : "function" == typeof define && define.amd ? define(b) : b()
}(function () {
    return function (V, U, T, S) {
        function R(g) {
            for (var f = -1, j = g ? g.length : 0, i = []; ++f < j;) {
                var h = g[f];
                h && i.push(h)
            }
            return i
        }

        function Q(b) {
            return G.isWrapped(b) ? b = [].slice.call(b) : G.isNode(b) && (b = [b]), b
        }

        function P(d) {
            var c = J.data(d, "velocity");
            return null === c ? S : c
        }

        function O(b) {
            return function (a) {
                return Math.round(a * b) * (1 / b)
            }
        }

        function N(av, au, at, ar) {
            function aq(d, c) {
                return 1 - 3 * c + 3 * d
            }

            function ap(d, c) {
                return 3 * c - 6 * d
            }

            function ao(c) {
                return 3 * c
            }

            function an(e, d, f) {
                return ((aq(d, f) * e + ap(d, f)) * e + ao(d)) * e
            }

            function am(e, d, f) {
                return 3 * aq(d, f) * e * e + 2 * ap(d, f) * e + ao(d)
            }

            function al(a, j) {
                for (var i = 0; ag > i; ++i) {
                    var h = am(j, av, at);
                    if (0 === h) {
                        return j
                    }
                    var d = an(j, av, at) - a;
                    j -= d / h
                }
                return j
            }

            function ak() {
                for (var a = 0; ab > a; ++a) {
                    X[a] = an(a * aa, av, at)
                }
            }

            function aj(a, l, k) {
                var j, i, d = 0;
                do {
                    i = l + (k - l) / 2, j = an(i, av, at) - a, j > 0 ? k = i : l = i
                } while (Math.abs(j) > ad && ++d < ac);
                return i
            }

            function ai(a) {
                for (var n = 0, m = 1, l = ab - 1; m != l && X[m] <= a; ++m) {
                    n += aa
                }
                --m;
                var k = (a - X[m]) / (X[m + 1] - X[m]), j = n + k * aa, d = am(j, av, at);
                return d >= ae ? al(a, j) : 0 == d ? j : aj(a, n, n + aa)
            }

            function ah() {
                W = !0, (av != au || at != ar) && ak()
            }

            var ag = 4, ae = 0.001, ad = 1e-7, ac = 10, ab = 11, aa = 1 / (ab - 1), Z = "Float32Array" in U;
            if (4 !== arguments.length) {
                return !1
            }
            for (var Y = 0; 4 > Y; ++Y) {
                if ("number" != typeof arguments[Y] || isNaN(arguments[Y]) || !isFinite(arguments[Y])) {
                    return !1
                }
            }
            av = Math.min(av, 1), at = Math.min(at, 1), av = Math.max(av, 0), at = Math.max(at, 0);
            var X = Z ? new Float32Array(ab) : new Array(ab), W = !1, b = function (a) {
                return W || ah(), av === au && at === ar ? a : 0 === a ? 0 : 1 === a ? 1 : an(ai(a), au, ar)
            };
            b.getControlPoints = function () {
                return [{x: av, y: au}, {x: at, y: ar}]
            };
            var af = "generateBezier(" + [av, au, at, ar] + ")";
            return b.toString = function () {
                return af
            }, b
        }

        function M(e, d) {
            var f = e;
            return G.isString(e) ? C.Easings[e] || (f = !1) : f = G.isArray(e) && 1 === e.length ? O.apply(null, e) : G.isArray(e) && 2 === e.length ? B.apply(null, e.concat([d])) : G.isArray(e) && 4 === e.length ? N.apply(null, e) : !1, f === !1 && (f = C.Easings[C.defaults.easing] ? C.defaults.easing : D), f
        }

        function L(ak) {
            if (ak) {
                var aj = (new Date).getTime(), ai = C.State.calls.length;
                ai > 10000 && (C.State.calls = R(C.State.calls));
                for (var ah = 0; ai > ah; ah++) {
                    if (C.State.calls[ah]) {
                        var ag = C.State.calls[ah], af = ag[0], ae = ag[2], ad = ag[3], ac = !!ad, aa = null;
                        ad || (ad = C.State.calls[ah][3] = aj - 16);
                        for (var Y = Math.min((aj - ad) / ae.duration, 1), W = 0, t = af.length; t > W; W++) {
                            var l = af[W], e = l.element;
                            if (P(e)) {
                                var d = !1;
                                if (ae.display !== S && null !== ae.display && "none" !== ae.display) {
                                    if ("flex" === ae.display) {
                                        var ab = ["-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex"];
                                        J.each(ab, function (f, c) {
                                            A.setPropertyValue(e, "display", c)
                                        })
                                    }
                                    A.setPropertyValue(e, "display", ae.display)
                                }
                                ae.visibility !== S && "hidden" !== ae.visibility && A.setPropertyValue(e, "visibility", ae.visibility);
                                for (var Z in l) {
                                    if ("element" !== Z) {
                                        var X, x = l[Z], v = G.isString(x.easing) ? C.Easings[x.easing] : x.easing;
                                        if (1 === Y) {
                                            X = x.max
                                        } else {
                                            var p = x.max - x.min;
                                            if (X = x.min + p * v(Y, ae, p), !ac && X === x.currentValue) {
                                                continue
                                            }
                                        }
                                        if (x.currentValue = X, "tween" === Z) {
                                            aa = X
                                        } else {
                                            if (A.Hooks.registered[Z]) {
                                                var m = A.Hooks.getRoot(Z), k = P(e).rootPropertyValueCache[m];
                                                k && (x.rootPropertyValue = k)
                                            }
                                            var g = A.setPropertyValue(e, Z, x.currentValue + (0 === parseFloat(X) ? "" : x.unitType), x.rootPropertyValue, x.scrollData);
                                            A.Hooks.registered[Z] && (P(e).rootPropertyValueCache[m] = A.Normalizations.registered[m] ? A.Normalizations.registered[m]("extract", null, g[1]) : g[1]), "transform" === g[0] && (d = !0)
                                        }
                                    }
                                }
                                ae.mobileHA && P(e).transformCache.translate3d === S && (P(e).transformCache.translate3d = "(0px, 0px, 0px)", d = !0), d && A.flushTransformCache(e)
                            }
                        }
                        ae.display !== S && "none" !== ae.display && (C.State.calls[ah][2].display = !1), ae.visibility !== S && "hidden" !== ae.visibility && (C.State.calls[ah][2].visibility = !1), ae.progress && ae.progress.call(ag[1], ag[1], Y, Math.max(0, ad + ae.duration - aj), ad, aa), 1 === Y && K(ah)
                    }
                }
            }
            C.State.isTicking && y(L)
        }

        function K(Z, Y) {
            if (!C.State.calls[Z]) {
                return !1
            }
            for (var X = C.State.calls[Z][0], W = C.State.calls[Z][1], x = C.State.calls[Z][2], w = C.State.calls[Z][4], v = !1, u = 0, t = X.length; t > u; u++) {
                var s = X[u].element;
                if (Y || x.loop || ("none" === x.display && A.setPropertyValue(s, "display", x.display), "hidden" === x.visibility && A.setPropertyValue(s, "visibility", x.visibility)), x.loop !== !0 && (J.queue(s)[1] === S || !/\.velocityQueueEntryFlag/i.test(J.queue(s)[1])) && P(s)) {
                    P(s).isAnimating = !1, P(s).rootPropertyValueCache = {};
                    var r = !1;
                    J.each(A.Lists.transforms3D, function (h, f) {
                        var j = /^scale/.test(f) ? 1 : 0, i = P(s).transformCache[f];
                        P(s).transformCache[f] !== S && new RegExp("^\\(" + j + "[^.]").test(i) && (r = !0, delete P(s).transformCache[f])
                    }), x.mobileHA && (r = !0, delete P(s).transformCache.translate3d), r && A.flushTransformCache(s), A.Values.removeClass(s, "velocity-animating")
                }
                if (!Y && x.complete && !x.loop && u === t - 1) {
                    try {
                        x.complete.call(W, W)
                    } catch (m) {
                        setTimeout(function () {
                            throw m
                        }, 1)
                    }
                }
                w && x.loop !== !0 && w(W), P(s) && x.loop === !0 && !Y && (J.each(P(s).tweensContainer, function (e, c) {
                    /^rotate/.test(e) && 360 === parseFloat(c.max) && (c.max = 0, c.min = 360), /^backgroundPosition/.test(e) && 100 === parseFloat(c.max) && "%" === c.unitType && (c.max = 0, c.min = 100)
                }), C(s, "reverse", {loop: !0, delay: x.delay})), x.queue !== !1 && J.dequeue(s, x.queue)
            }
            C.State.calls[Z] = !1;
            for (var g = 0, d = C.State.calls.length; d > g; g++) {
                if (C.State.calls[g] !== !1) {
                    v = !0;
                    break
                }
            }
            v === !1 && (C.State.isTicking = !1, delete C.State.calls, C.State.calls = [])
        }

        var J, I = function () {
            if (T.documentMode) {
                return T.documentMode
            }
            for (var d = 7; d > 4; d--) {
                var c = T.createElement("div");
                if (c.innerHTML = "<!--[if IE " + d + "]><span></span><![endif]-->", c.getElementsByTagName("span").length) {
                    return c = null, d
                }
            }
            return S
        }(), H = function () {
            var b = 0;
            return U.webkitRequestAnimationFrame || U.mozRequestAnimationFrame || function (a) {
                    var f, e = (new Date).getTime();
                    return f = Math.max(0, 16 - (e - b)), b = e + f, setTimeout(function () {
                        a(e + f)
                    }, f)
                }
        }(), G = {
            isString: function (b) {
                return "string" == typeof b
            }, isArray: Array.isArray || function (b) {
                return "[object Array]" === Object.prototype.toString.call(b)
            }, isFunction: function (b) {
                return "[object Function]" === Object.prototype.toString.call(b)
            }, isNode: function (b) {
                return b && b.nodeType
            }, isNodeList: function (b) {
                return "object" == typeof b && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(b)) && b.length !== S && (0 === b.length || "object" == typeof b[0] && b[0].nodeType > 0)
            }, isWrapped: function (b) {
                return b && (b.jquery || U.Zepto && U.Zepto.zepto.isZ(b))
            }, isSVG: function (b) {
                return U.SVGElement && b instanceof U.SVGElement
            }, isEmptyObject: function (d) {
                for (var c in d) {
                    return !1
                }
                return !0
            }
        }, F = !1;
        if (V.fn && V.fn.jquery ? (J = V, F = !0) : J = U.Velocity.Utilities, 8 >= I && !F) {
            throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.")
        }
        if (7 >= I) {
            return void (jQuery.fn.velocity = jQuery.fn.animate)
        }
        var E = 400, D = "swing", C = {
            State: {
                isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                isAndroid: /Android/i.test(navigator.userAgent),
                isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
                isChrome: U.chrome,
                isFirefox: /Firefox/i.test(navigator.userAgent),
                prefixElement: T.createElement("div"),
                prefixMatches: {},
                scrollAnchor: null,
                scrollPropertyLeft: null,
                scrollPropertyTop: null,
                isTicking: !1,
                calls: []
            },
            CSS: {},
            Utilities: J,
            Redirects: {},
            Easings: {},
            Promise: U.Promise,
            defaults: {
                queue: "",
                duration: E,
                easing: D,
                begin: S,
                complete: S,
                progress: S,
                display: S,
                visibility: S,
                loop: !1,
                delay: !1,
                mobileHA: !0,
                _cacheValues: !0
            },
            init: function (b) {
                J.data(b, "velocity", {
                    isSVG: G.isSVG(b),
                    isAnimating: !1,
                    computedStyle: null,
                    tweensContainer: null,
                    rootPropertyValueCache: {},
                    transformCache: {}
                })
            },
            hook: null,
            mock: !1,
            version: {major: 1, minor: 2, patch: 2},
            debug: !1
        };
        U.pageYOffset !== S ? (C.State.scrollAnchor = U, C.State.scrollPropertyLeft = "pageXOffset", C.State.scrollPropertyTop = "pageYOffset") : (C.State.scrollAnchor = T.documentElement || T.body.parentNode || T.body, C.State.scrollPropertyLeft = "scrollLeft", C.State.scrollPropertyTop = "scrollTop");
        var B = function () {
            function f(b) {
                return -b.tension * b.x - b.friction * b.v
            }

            function e(a, k, j) {
                var i = {x: a.x + j.dx * k, v: a.v + j.dv * k, tension: a.tension, friction: a.friction};
                return {dx: i.v, dv: f(i)}
            }

            function h(p, o) {
                var n = {
                    dx: p.v,
                    dv: f(p)
                }, m = e(p, 0.5 * o, n), l = e(p, 0.5 * o, m), k = e(p, o, l), b = 1 / 6 * (n.dx + 2 * (m.dx + l.dx) + k.dx), a = 1 / 6 * (n.dv + 2 * (m.dv + l.dv) + k.dv);
                return p.x = p.x + b * o, p.v = p.v + a * o, p
            }

            return function g(v, u, t) {
                var s, r, q, p = {x: -1, v: 0, tension: null, friction: null}, o = [0], n = 0, d = 0.0001, c = 0.016;
                for (v = parseFloat(v) || 500, u = parseFloat(u) || 20, t = t || null, p.tension = v, p.friction = u, s = null !== t, s ? (n = g(v, u), r = n / t * c) : r = c; ;) {
                    if (q = h(q || p, r), o.push(1 + q.x), n += 16, !(Math.abs(q.x) > d && Math.abs(q.v) > d)) {
                        break
                    }
                }
                return s ? function (b) {
                    return o[b * (o.length - 1) | 0]
                } : n
            }
        }();
        C.Easings = {
            linear: function (b) {
                return b
            }, swing: function (b) {
                return 0.5 - Math.cos(b * Math.PI) / 2
            }, spring: function (b) {
                return 1 - Math.cos(4.5 * b * Math.PI) * Math.exp(6 * -b)
            }
        }, J.each([["ease", [0.25, 0.1, 0.25, 1]], ["ease-in", [0.42, 0, 1, 1]], ["ease-out", [0, 0, 0.58, 1]], ["ease-in-out", [0.42, 0, 0.58, 1]], ["easeInSine", [0.47, 0, 0.745, 0.715]], ["easeOutSine", [0.39, 0.575, 0.565, 1]], ["easeInOutSine", [0.445, 0.05, 0.55, 0.95]], ["easeInQuad", [0.55, 0.085, 0.68, 0.53]], ["easeOutQuad", [0.25, 0.46, 0.45, 0.94]], ["easeInOutQuad", [0.455, 0.03, 0.515, 0.955]], ["easeInCubic", [0.55, 0.055, 0.675, 0.19]], ["easeOutCubic", [0.215, 0.61, 0.355, 1]], ["easeInOutCubic", [0.645, 0.045, 0.355, 1]], ["easeInQuart", [0.895, 0.03, 0.685, 0.22]], ["easeOutQuart", [0.165, 0.84, 0.44, 1]], ["easeInOutQuart", [0.77, 0, 0.175, 1]], ["easeInQuint", [0.755, 0.05, 0.855, 0.06]], ["easeOutQuint", [0.23, 1, 0.32, 1]], ["easeInOutQuint", [0.86, 0, 0.07, 1]], ["easeInExpo", [0.95, 0.05, 0.795, 0.035]], ["easeOutExpo", [0.19, 1, 0.22, 1]], ["easeInOutExpo", [1, 0, 0, 1]], ["easeInCirc", [0.6, 0.04, 0.98, 0.335]], ["easeOutCirc", [0.075, 0.82, 0.165, 1]], ["easeInOutCirc", [0.785, 0.135, 0.15, 0.86]]], function (d, c) {
            C.Easings[c[0]] = N.apply(null, c[1])
        });
        var A = C.CSS = {
            RegEx: {
                isHex: /^#([A-f\d]{3}){1,2}$/i,
                valueUnwrap: /^[A-z]+\((.*)\)$/i,
                wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
                valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi
            },
            Lists: {
                colors: ["fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor"],
                transformsBase: ["translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ"],
                transforms3D: ["transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY"]
            },
            Hooks: {
                templates: {
                    textShadow: ["Color X Y Blur", "black 0px 0px 0px"],
                    boxShadow: ["Color X Y Blur Spread", "black 0px 0px 0px 0px"],
                    clip: ["Top Right Bottom Left", "0px 0px 0px 0px"],
                    backgroundPosition: ["X Y", "0% 0%"],
                    transformOrigin: ["X Y Z", "50% 50% 0px"],
                    perspectiveOrigin: ["X Y", "50% 50%"]
                }, registered: {}, register: function () {
                    for (var j = 0; j < A.Lists.colors.length; j++) {
                        var i = "color" === A.Lists.colors[j] ? "0 0 0 1" : "255 255 255 1";
                        A.Hooks.templates[A.Lists.colors[j]] = ["Red Green Blue Alpha", i]
                    }
                    var p, o, n;
                    if (I) {
                        for (p in A.Hooks.templates) {
                            o = A.Hooks.templates[p], n = o[0].split(" ");
                            var m = o[1].match(A.RegEx.valueSplit);
                            "Color" === n[0] && (n.push(n.shift()), m.push(m.shift()), A.Hooks.templates[p] = [n.join(" "), m.join(" ")])
                        }
                    }
                    for (p in A.Hooks.templates) {
                        o = A.Hooks.templates[p], n = o[0].split(" ");
                        for (var j in n) {
                            var l = p + n[j], k = j;
                            A.Hooks.registered[l] = [p, k]
                        }
                    }
                }, getRoot: function (d) {
                    var c = A.Hooks.registered[d];
                    return c ? c[0] : d
                }, cleanRootPropertyValue: function (d, c) {
                    return A.RegEx.valueUnwrap.test(c) && (c = c.match(A.RegEx.valueUnwrap)[1]), A.Values.isCSSNullValue(c) && (c = A.Hooks.templates[d][1]), c
                }, extractValue: function (g, f) {
                    var j = A.Hooks.registered[g];
                    if (j) {
                        var i = j[0], h = j[1];
                        return f = A.Hooks.cleanRootPropertyValue(i, f), f.toString().match(A.RegEx.valueSplit)[h]
                    }
                    return f
                }, injectValue: function (j, i, p) {
                    var o = A.Hooks.registered[j];
                    if (o) {
                        var n, m, l = o[0], k = o[1];
                        return p = A.Hooks.cleanRootPropertyValue(l, p), n = p.toString().match(A.RegEx.valueSplit), n[k] = i, m = n.join(" ")
                    }
                    return p
                }
            },
            Normalizations: {
                registered: {
                    clip: function (f, e, h) {
                        switch (f) {
                            case"name":
                                return "clip";
                            case"extract":
                                var g;
                                return A.RegEx.wrappedValueAlreadyExtracted.test(h) ? g = h : (g = h.toString().match(A.RegEx.valueUnwrap), g = g ? g[1].replace(/,(\s+)?/g, " ") : h), g;
                            case"inject":
                                return "rect(" + h + ")"
                        }
                    }, blur: function (g, f, j) {
                        switch (g) {
                            case"name":
                                return C.State.isFirefox ? "filter" : "-webkit-filter";
                            case"extract":
                                var i = parseFloat(j);
                                if (!i && 0 !== i) {
                                    var h = j.toString().match(/blur\(([0-9]+[A-z]+)\)/i);
                                    i = h ? h[1] : 0
                                }
                                return i;
                            case"inject":
                                return parseFloat(j) ? "blur(" + j + ")" : "none"
                        }
                    }, opacity: function (f, e, h) {
                        if (8 >= I) {
                            switch (f) {
                                case"name":
                                    return "filter";
                                case"extract":
                                    var g = h.toString().match(/alpha\(opacity=(.*)\)/i);
                                    return h = g ? g[1] / 100 : 1;
                                case"inject":
                                    return e.style.zoom = 1, parseFloat(h) >= 1 ? "" : "alpha(opacity=" + parseInt(100 * parseFloat(h), 10) + ")"
                            }
                        } else {
                            switch (f) {
                                case"name":
                                    return "opacity";
                                case"extract":
                                    return h;
                                case"inject":
                                    return h
                            }
                        }
                    }
                }, register: function () {
                    9 >= I || C.State.isGingerbread || (A.Lists.transformsBase = A.Lists.transformsBase.concat(A.Lists.transforms3D));
                    for (var b = 0; b < A.Lists.transformsBase.length; b++) {
                        !function () {
                            var a = A.Lists.transformsBase[b];
                            A.Normalizations.registered[a] = function (d, i, h) {
                                switch (d) {
                                    case"name":
                                        return "transform";
                                    case"extract":
                                        return P(i) === S || P(i).transformCache[a] === S ? /^scale/i.test(a) ? 1 : 0 : P(i).transformCache[a].replace(/[()]/g, "");
                                    case"inject":
                                        var g = !1;
                                        switch (a.substr(0, a.length - 1)) {
                                            case"translate":
                                                g = !/(%|px|em|rem|vw|vh|\d)$/i.test(h);
                                                break;
                                            case"scal":
                                            case"scale":
                                                C.State.isAndroid && P(i).transformCache[a] === S && 1 > h && (h = 1), g = !/(\d)$/i.test(h);
                                                break;
                                            case"skew":
                                                g = !/(deg|\d)$/i.test(h);
                                                break;
                                            case"rotate":
                                                g = !/(deg|\d)$/i.test(h)
                                        }
                                        return g || (P(i).transformCache[a] = "(" + h + ")"), P(i).transformCache[a]
                                }
                            }
                        }()
                    }
                    for (var b = 0; b < A.Lists.colors.length; b++) {
                        !function () {
                            var a = A.Lists.colors[b];
                            A.Normalizations.registered[a] = function (d, m, l) {
                                switch (d) {
                                    case"name":
                                        return a;
                                    case"extract":
                                        var k;
                                        if (A.RegEx.wrappedValueAlreadyExtracted.test(l)) {
                                            k = l
                                        } else {
                                            var j, i = {
                                                black: "rgb(0, 0, 0)",
                                                blue: "rgb(0, 0, 255)",
                                                gray: "rgb(128, 128, 128)",
                                                green: "rgb(0, 128, 0)",
                                                red: "rgb(255, 0, 0)",
                                                white: "rgb(255, 255, 255)"
                                            };
                                            /^[A-z]+$/i.test(l) ? j = i[l] !== S ? i[l] : i.black : A.RegEx.isHex.test(l) ? j = "rgb(" + A.Values.hexToRgb(l).join(" ") + ")" : /^rgba?\(/i.test(l) || (j = i.black), k = (j || l).toString().match(A.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ")
                                        }
                                        return 8 >= I || 3 !== k.split(" ").length || (k += " 1"), k;
                                    case"inject":
                                        return 8 >= I ? 4 === l.split(" ").length && (l = l.split(/\s+/).slice(0, 3).join(" ")) : 3 === l.split(" ").length && (l += " 1"), (8 >= I ? "rgb" : "rgba") + "(" + l.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")"
                                }
                            }
                        }()
                    }
                }
            },
            Names: {
                camelCase: function (b) {
                    return b.replace(/-(\w)/g, function (d, c) {
                        return c.toUpperCase()
                    })
                }, SVGAttribute: function (d) {
                    var c = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";
                    return (I || C.State.isAndroid && !C.State.isChrome) && (c += "|transform"), new RegExp("^(" + c + ")$", "i").test(d)
                }, prefixCheck: function (g) {
                    if (C.State.prefixMatches[g]) {
                        return [C.State.prefixMatches[g], !0]
                    }
                    for (var f = ["", "Webkit", "Moz", "ms", "O"], j = 0, i = f.length; i > j; j++) {
                        var h;
                        if (h = 0 === j ? g : f[j] + g.replace(/^\w/, function (b) {
                                return b.toUpperCase()
                            }), G.isString(C.State.prefixElement.style[h])) {
                            return C.State.prefixMatches[g] = h, [h, !0]
                        }
                    }
                    return [g, !1]
                }
            },
            Values: {
                hexToRgb: function (f) {
                    var e, h = /^#?([a-f\d])([a-f\d])([a-f\d])$/i, g = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
                    return f = f.replace(h, function (j, i, l, k) {
                        return i + i + l + l + k + k
                    }), e = g.exec(f), e ? [parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)] : [0, 0, 0]
                }, isCSSNullValue: function (b) {
                    return 0 == b || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(b)
                }, getUnitType: function (b) {
                    return /^(rotate|skew)/i.test(b) ? "deg" : /(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(b) ? "" : "px"
                }, getDisplayType: function (d) {
                    var c = d && d.tagName.toString().toLowerCase();
                    return /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(c) ? "inline" : /^(li)$/i.test(c) ? "list-item" : /^(tr)$/i.test(c) ? "table-row" : /^(table)$/i.test(c) ? "table" : /^(tbody)$/i.test(c) ? "table-row-group" : "block"
                }, addClass: function (d, c) {
                    d.classList ? d.classList.add(c) : d.className += (d.className.length ? " " : "") + c
                }, removeClass: function (d, c) {
                    d.classList ? d.classList.remove(c) : d.className = d.className.toString().replace(new RegExp("(^|\\s)" + c.split(" ").join("|") + "(\\s|$)", "gi"), " ")
                }
            },
            getPropertyValue: function (v, u, t, s) {
                function r(aa, Z) {
                    function Y() {
                        W && A.setPropertyValue(aa, "display", "none")
                    }

                    var X = 0;
                    if (8 >= I) {
                        X = J.css(aa, Z)
                    } else {
                        var W = !1;
                        if (/^(width|height)$/.test(Z) && 0 === A.getPropertyValue(aa, "display") && (W = !0, A.setPropertyValue(aa, "display", A.Values.getDisplayType(aa))), !s) {
                            if ("height" === Z && "border-box" !== A.getPropertyValue(aa, "boxSizing").toString().toLowerCase()) {
                                var x = aa.offsetHeight - (parseFloat(A.getPropertyValue(aa, "borderTopWidth")) || 0) - (parseFloat(A.getPropertyValue(aa, "borderBottomWidth")) || 0) - (parseFloat(A.getPropertyValue(aa, "paddingTop")) || 0) - (parseFloat(A.getPropertyValue(aa, "paddingBottom")) || 0);
                                return Y(), x
                            }
                            if ("width" === Z && "border-box" !== A.getPropertyValue(aa, "boxSizing").toString().toLowerCase()) {
                                var w = aa.offsetWidth - (parseFloat(A.getPropertyValue(aa, "borderLeftWidth")) || 0) - (parseFloat(A.getPropertyValue(aa, "borderRightWidth")) || 0) - (parseFloat(A.getPropertyValue(aa, "paddingLeft")) || 0) - (parseFloat(A.getPropertyValue(aa, "paddingRight")) || 0);
                                return Y(), w
                            }
                        }
                        var h;
                        h = P(aa) === S ? U.getComputedStyle(aa, null) : P(aa).computedStyle ? P(aa).computedStyle : P(aa).computedStyle = U.getComputedStyle(aa, null), "borderColor" === Z && (Z = "borderTopColor"), X = 9 === I && "filter" === Z ? h.getPropertyValue(Z) : h[Z], ("" === X || null === X) && (X = aa.style[Z]), Y()
                    }
                    if ("auto" === X && /^(top|right|bottom|left)$/i.test(Z)) {
                        var f = r(aa, "position");
                        ("fixed" === f || "absolute" === f && /top|left/i.test(Z)) && (X = J(aa).position()[Z] + "px")
                    }
                    return X
                }

                var q;
                if (A.Hooks.registered[u]) {
                    var n = u, m = A.Hooks.getRoot(n);
                    t === S && (t = A.getPropertyValue(v, A.Names.prefixCheck(m)[0])), A.Normalizations.registered[m] && (t = A.Normalizations.registered[m]("extract", v, t)), q = A.Hooks.extractValue(n, t)
                } else {
                    if (A.Normalizations.registered[u]) {
                        var g, d;
                        g = A.Normalizations.registered[u]("name", v), "transform" !== g && (d = r(v, A.Names.prefixCheck(g)[0]), A.Values.isCSSNullValue(d) && A.Hooks.templates[u] && (d = A.Hooks.templates[u][1])), q = A.Normalizations.registered[u]("extract", v, d)
                    }
                }
                if (!/^[\d-]/.test(q)) {
                    if (P(v) && P(v).isSVG && A.Names.SVGAttribute(u)) {
                        if (/^(height|width)$/i.test(u)) {
                            try {
                                q = v.getBBox()[u]
                            } catch (b) {
                                q = 0
                            }
                        } else {
                            q = v.getAttribute(u)
                        }
                    } else {
                        q = r(v, A.Names.prefixCheck(u)[0])
                    }
                }
                return A.Values.isCSSNullValue(q) && (q = 0), C.debug >= 2 && console.log("Get " + u + ": " + q), q
            },
            setPropertyValue: function (r, q, p, o, n) {
                var m = q;
                if ("scroll" === q) {
                    n.container ? n.container["scroll" + n.direction] = p : "Left" === n.direction ? U.scrollTo(p, n.alternateValue) : U.scrollTo(n.alternateValue, p)
                } else {
                    if (A.Normalizations.registered[q] && "transform" === A.Normalizations.registered[q]("name", r)) {
                        A.Normalizations.registered[q]("inject", r, p), m = "transform", p = P(r).transformCache[q]
                    } else {
                        if (A.Hooks.registered[q]) {
                            var l = q, g = A.Hooks.getRoot(q);
                            o = o || A.getPropertyValue(r, g), p = A.Hooks.injectValue(l, p, o), q = g
                        }
                        if (A.Normalizations.registered[q] && (p = A.Normalizations.registered[q]("inject", r, p), q = A.Normalizations.registered[q]("name", r)), m = A.Names.prefixCheck(q)[0], 8 >= I) {
                            try {
                                r.style[m] = p
                            } catch (b) {
                                C.debug && console.log("Browser does not support [" + p + "] for [" + m + "]")
                            }
                        } else {
                            P(r) && P(r).isSVG && A.Names.SVGAttribute(q) ? r.setAttribute(q, p) : r.style[m] = p
                        }
                        C.debug >= 2 && console.log("Set " + q + " (" + m + "): " + p)
                    }
                }
                return [m, p]
            },
            flushTransformCache: function (h) {
                function g(a) {
                    return parseFloat(A.getPropertyValue(h, a))
                }

                var l = "";
                if ((I || C.State.isAndroid && !C.State.isChrome) && P(h).isSVG) {
                    var k = {
                        translate: [g("translateX"), g("translateY")],
                        skewX: [g("skewX")],
                        skewY: [g("skewY")],
                        scale: 1 !== g("scale") ? [g("scale"), g("scale")] : [g("scaleX"), g("scaleY")],
                        rotate: [g("rotateZ"), 0, 0]
                    };
                    J.each(P(h).transformCache, function (b) {
                        /^translate/i.test(b) ? b = "translate" : /^scale/i.test(b) ? b = "scale" : /^rotate/i.test(b) && (b = "rotate"), k[b] && (l += b + "(" + k[b].join(" ") + ") ", delete k[b])
                    })
                } else {
                    var j, i;
                    J.each(P(h).transformCache, function (a) {
                        return j = P(h).transformCache[a], "transformPerspective" === a ? (i = j, !0) : (9 === I && "rotateZ" === a && (a = "rotate"), void (l += a + j + " "))
                    }), i && (l = "perspective" + i + " " + l)
                }
                A.setPropertyValue(h, "transform", l)
            }
        };
        A.Hooks.register(), A.Normalizations.register(), C.hook = function (f, d, h) {
            var g = S;
            return f = Q(f), J.each(f, function (b, e) {
                if (P(e) === S && C.init(e), h === S) {
                    g === S && (g = C.CSS.getPropertyValue(e, d))
                } else {
                    var c = C.CSS.setPropertyValue(e, d, h);
                    "transform" === c[0] && C.CSS.flushTransformCache(e), g = c
                }
            }), g
        };
        var z = function () {
            function ag() {
                return ae ? Y.promise || null : ad
            }

            function af() {
                function n() {
                    function aB(aD, aC) {
                        var aG = S, aF = S, aE = S;
                        return G.isArray(aD) ? (aG = aD[0], !G.isArray(aD[1]) && /^[\d-]/.test(aD[1]) || G.isFunction(aD[1]) || A.RegEx.isHex.test(aD[1]) ? aE = aD[1] : (G.isString(aD[1]) && !A.RegEx.isHex.test(aD[1]) || G.isArray(aD[1])) && (aF = aC ? aD[1] : M(aD[1], q.duration), aD[2] !== S && (aE = aD[2]))) : aG = aD, aC || (aF = aF || q.easing), G.isFunction(aG) && (aG = aG.call(s, j, l)), G.isFunction(aE) && (aE = aE.call(s, j, l)), [aG || 0, aF, aE]
                    }

                    function aA(aD, aC) {
                        var aF, aE;
                        return aE = (aC || "0").toString().toLowerCase().replace(/[%A-z]+$/, function (aG) {
                            return aF = aG, ""
                        }), aF || (aF = A.Values.getUnitType(aD)), [aE, aF]
                    }

                    function az() {
                        var aC = {
                            myParent: s.parentNode || T.body,
                            position: A.getPropertyValue(s, "position"),
                            fontSize: A.getPropertyValue(s, "fontSize")
                        }, aH = aC.position === k.lastPosition && aC.myParent === k.lastParent, aG = aC.fontSize === k.lastFontSize;
                        k.lastParent = aC.myParent, k.lastPosition = aC.position, k.lastFontSize = aC.fontSize;
                        var aF = 100, aE = {};
                        if (aG && aH) {
                            aE.emToPx = k.lastEmToPx, aE.percentToPxWidth = k.lastPercentToPxWidth, aE.percentToPxHeight = k.lastPercentToPxHeight
                        } else {
                            var aD = P(s).isSVG ? T.createElementNS("http://www.w3.org/2000/svg", "rect") : T.createElement("div");
                            C.init(aD), aC.myParent.appendChild(aD), J.each(["overflow", "overflowX", "overflowY"], function (aJ, aI) {
                                C.CSS.setPropertyValue(aD, aI, "hidden")
                            }), C.CSS.setPropertyValue(aD, "position", aC.position), C.CSS.setPropertyValue(aD, "fontSize", aC.fontSize), C.CSS.setPropertyValue(aD, "boxSizing", "content-box"), J.each(["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height"], function (aJ, aI) {
                                C.CSS.setPropertyValue(aD, aI, aF + "%")
                            }), C.CSS.setPropertyValue(aD, "paddingLeft", aF + "em"), aE.percentToPxWidth = k.lastPercentToPxWidth = (parseFloat(A.getPropertyValue(aD, "width", null, !0)) || 1) / aF, aE.percentToPxHeight = k.lastPercentToPxHeight = (parseFloat(A.getPropertyValue(aD, "height", null, !0)) || 1) / aF, aE.emToPx = k.lastEmToPx = (parseFloat(A.getPropertyValue(aD, "paddingLeft")) || 1) / aF, aC.myParent.removeChild(aD)
                        }
                        return null === k.remToPx && (k.remToPx = parseFloat(A.getPropertyValue(T.body, "fontSize")) || 16), null === k.vwToPx && (k.vwToPx = parseFloat(U.innerWidth) / 100, k.vhToPx = parseFloat(U.innerHeight) / 100), aE.remToPx = k.remToPx, aE.vwToPx = k.vwToPx, aE.vhToPx = k.vhToPx, C.debug >= 1 && console.log("Unit ratios: " + JSON.stringify(aE), s), aE
                    }

                    if (q.begin && 0 === j) {
                        try {
                            q.begin.call(ab, ab)
                        } catch (ax) {
                            setTimeout(function () {
                                throw ax
                            }, 1)
                        }
                    }
                    if ("scroll" === X) {
                        var au, aq, ao, ay = /^x$/i.test(q.axis) ? "Left" : "Top", aw = parseFloat(q.offset) || 0;
                        q.container ? G.isWrapped(q.container) || G.isNode(q.container) ? (q.container = q.container[0] || q.container, au = q.container["scroll" + ay], ao = au + J(s).position()[ay.toLowerCase()] + aw) : q.container = null : (au = C.State.scrollAnchor[C.State["scrollProperty" + ay]], aq = C.State.scrollAnchor[C.State["scrollProperty" + ("Left" === ay ? "Top" : "Left")]], ao = J(s).offset()[ay.toLowerCase()] + aw), o = {
                            scroll: {
                                rootPropertyValue: !1,
                                min: au,
                                currentValue: au,
                                max: ao,
                                unitType: "",
                                easing: q.easing,
                                scrollData: {container: q.container, direction: ay, alternateValue: aq}
                            }, element: s
                        }, C.debug && console.log("tweensContainer (scroll): ", o.scroll, s)
                    } else {
                        if ("reverse" === X) {
                            if (!P(s).tweensContainer) {
                                return void J.dequeue(s, q.queue)
                            }
                            "none" === P(s).opts.display && (P(s).opts.display = "auto"), "hidden" === P(s).opts.visibility && (P(s).opts.visibility = "visible"), P(s).opts.loop = !1, P(s).opts.begin = null, P(s).opts.complete = null, w.easing || delete q.easing, w.duration || delete q.duration, q = J.extend({}, P(s).opts, q);
                            var av = J.extend(!0, {}, P(s).tweensContainer);
                            for (var at in av) {
                                if ("element" !== at) {
                                    var ar = av[at].min;
                                    av[at].min = av[at].currentValue = av[at].max, av[at].max = ar, G.isEmptyObject(w) || (av[at].easing = q.easing), C.debug && console.log("reverse tweensContainer (" + at + "): " + JSON.stringify(av[at]), s)
                                }
                            }
                            o = av
                        } else {
                            if ("start" === X) {
                                var av;
                                P(s).tweensContainer && P(s).isAnimating === !0 && (av = P(s).tweensContainer), J.each(Z, function (aL, aK) {
                                    if (RegExp("^" + A.Lists.colors.join("$|^") + "$").test(aL)) {
                                        var aJ = aB(aK, !0), aI = aJ[0], aH = aJ[1], aG = aJ[2];
                                        if (A.RegEx.isHex.test(aI)) {
                                            for (var aF = ["Red", "Green", "Blue"], aE = A.Values.hexToRgb(aI), aD = aG ? A.Values.hexToRgb(aG) : S, aC = 0; aC < aF.length; aC++) {
                                                var a = [aE[aC]];
                                                aH && a.push(aH), aD !== S && a.push(aD[aC]), Z[aL + aF[aC]] = a
                                            }
                                            delete Z[aL]
                                        }
                                    }
                                });
                                for (var ap in Z) {
                                    var an = aB(Z[ap]), am = an[0], al = an[1], ak = an[2];
                                    ap = A.Names.camelCase(ap);
                                    var aj = A.Hooks.getRoot(ap), ai = !1;
                                    if (P(s).isSVG || "tween" === aj || A.Names.prefixCheck(aj)[1] !== !1 || A.Normalizations.registered[aj] !== S) {
                                        (q.display !== S && null !== q.display && "none" !== q.display || q.visibility !== S && "hidden" !== q.visibility) && /opacity|filter/.test(ap) && !ak && 0 !== am && (ak = 0), q._cacheValues && av && av[ap] ? (ak === S && (ak = av[ap].max + av[ap].unitType), ai = P(s).rootPropertyValueCache[aj]) : A.Hooks.registered[ap] ? ak === S ? (ai = A.getPropertyValue(s, aj), ak = A.getPropertyValue(s, ap, ai)) : ai = A.Hooks.templates[aj][1] : ak === S && (ak = A.getPropertyValue(s, ap));
                                        var ah, x, i, h = !1;
                                        if (ah = aA(ap, ak), ak = ah[0], i = ah[1], ah = aA(ap, am), am = ah[0].replace(/^([+-\/*])=/, function (aD, aC) {
                                                return h = aC, ""
                                            }), x = ah[1], ak = parseFloat(ak) || 0, am = parseFloat(am) || 0, "%" === x && (/^(fontSize|lineHeight)$/.test(ap) ? (am /= 100, x = "em") : /^scale/.test(ap) ? (am /= 100, x = "") : /(Red|Green|Blue)$/i.test(ap) && (am = am / 100 * 255, x = "")), /[\/*]/.test(h)) {
                                            x = i
                                        } else {
                                            if (i !== x && 0 !== ak) {
                                                if (0 === am) {
                                                    x = i
                                                } else {
                                                    u = u || az();
                                                    var e = /margin|padding|left|right|width|text|word|letter/i.test(ap) || /X$/.test(ap) || "x" === ap ? "x" : "y";
                                                    switch (i) {
                                                        case"%":
                                                            ak *= "x" === e ? u.percentToPxWidth : u.percentToPxHeight;
                                                            break;
                                                        case"px":
                                                            break;
                                                        default:
                                                            ak *= u[i + "ToPx"]
                                                    }
                                                    switch (x) {
                                                        case"%":
                                                            ak *= 1 / ("x" === e ? u.percentToPxWidth : u.percentToPxHeight);
                                                            break;
                                                        case"px":
                                                            break;
                                                        default:
                                                            ak *= 1 / u[x + "ToPx"]
                                                    }
                                                }
                                            }
                                        }
                                        switch (h) {
                                            case"+":
                                                am = ak + am;
                                                break;
                                            case"-":
                                                am = ak - am;
                                                break;
                                            case"*":
                                                am = ak * am;
                                                break;
                                            case"/":
                                                am = ak / am
                                        }
                                        o[ap] = {
                                            rootPropertyValue: ai,
                                            min: ak,
                                            currentValue: ak,
                                            max: am,
                                            unitType: x,
                                            easing: al
                                        }, C.debug && console.log("tweensContainer (" + ap + "): " + JSON.stringify(o[ap]), s)
                                    } else {
                                        C.debug && console.log("Skipping [" + aj + "] due to a lack of browser support.")
                                    }
                                }
                                o.element = s
                            }
                        }
                    }
                    o.element && (A.Values.addClass(s, "velocity-animating"), g.push(o), "" === q.queue && (P(s).tweensContainer = o, P(s).opts = q), P(s).isAnimating = !0, j === l - 1 ? (C.State.calls.push([g, ab, q, null, Y.resolver]), C.State.isTicking === !1 && (C.State.isTicking = !0, L())) : j++)
                }

                var u, s = this, q = J.extend({}, C.defaults, w), o = {};
                switch (P(s) === S && C.init(s), parseFloat(q.delay) && q.queue !== !1 && J.queue(s, q.queue, function (e) {
                    C.velocityQueueEntryFlag = !0, P(s).delayTimer = {
                        setTimeout: setTimeout(e, parseFloat(q.delay)),
                        next: e
                    }
                }), q.duration.toString().toLowerCase()) {
                    case"fast":
                        q.duration = 200;
                        break;
                    case"normal":
                        q.duration = E;
                        break;
                    case"slow":
                        q.duration = 600;
                        break;
                    default:
                        q.duration = parseFloat(q.duration) || 1
                }
                C.mock !== !1 && (C.mock === !0 ? q.duration = q.delay = 1 : (q.duration *= parseFloat(C.mock) || 1, q.delay *= parseFloat(C.mock) || 1)), q.easing = M(q.easing, q.duration), q.begin && !G.isFunction(q.begin) && (q.begin = null), q.progress && !G.isFunction(q.progress) && (q.progress = null), q.complete && !G.isFunction(q.complete) && (q.complete = null), q.display !== S && null !== q.display && (q.display = q.display.toString().toLowerCase(), "auto" === q.display && (q.display = C.CSS.Values.getDisplayType(s))), q.visibility !== S && null !== q.visibility && (q.visibility = q.visibility.toString().toLowerCase()), q.mobileHA = q.mobileHA && C.State.isMobile && !C.State.isGingerbread, q.queue === !1 ? q.delay ? setTimeout(n, q.delay) : n() : J.queue(s, q.queue, function (a, e) {
                    return e === !0 ? (Y.promise && Y.resolver(ab), !0) : (C.velocityQueueEntryFlag = !0, void n(a))
                }), "" !== q.queue && "fx" !== q.queue || "inprogress" === J.queue(s)[0] || J.dequeue(s)
            }

            var ae, ad, ac, ab, Z, w, t = arguments[0] && (arguments[0].p || J.isPlainObject(arguments[0].properties) && !arguments[0].properties.names || G.isString(arguments[0].properties));
            if (G.isWrapped(this) ? (ae = !1, ac = 0, ab = this, ad = this) : (ae = !0, ac = 1, ab = t ? arguments[0].elements || arguments[0].e : arguments[0]), ab = Q(ab)) {
                t ? (Z = arguments[0].properties || arguments[0].p, w = arguments[0].options || arguments[0].o) : (Z = arguments[ac], w = arguments[ac + 1]);
                var l = ab.length, j = 0;
                if (!/^(stop|finish|finishAll)$/i.test(Z) && !J.isPlainObject(w)) {
                    var f = ac + 1;
                    w = {};
                    for (var aa = f; aa < arguments.length; aa++) {
                        G.isArray(arguments[aa]) || !/^(fast|normal|slow)$/i.test(arguments[aa]) && !/^\d/.test(arguments[aa]) ? G.isString(arguments[aa]) || G.isArray(arguments[aa]) ? w.easing = arguments[aa] : G.isFunction(arguments[aa]) && (w.complete = arguments[aa]) : w.duration = arguments[aa]
                    }
                }
                var Y = {promise: null, resolver: null, rejecter: null};
                ae && C.Promise && (Y.promise = new C.Promise(function (h, e) {
                    Y.resolver = h, Y.rejecter = e
                }));
                var X;
                switch (Z) {
                    case"scroll":
                        X = "scroll";
                        break;
                    case"reverse":
                        X = "reverse";
                        break;
                    case"finish":
                    case"finishAll":
                    case"stop":
                        J.each(ab, function (h, e) {
                            P(e) && P(e).delayTimer && (clearTimeout(P(e).delayTimer.setTimeout), P(e).delayTimer.next && P(e).delayTimer.next(), delete P(e).delayTimer), "finishAll" !== Z || w !== !0 && !G.isString(w) || (J.each(J.queue(e, G.isString(w) ? w : ""), function (n, i) {
                                G.isFunction(i) && i()
                            }), J.queue(e, G.isString(w) ? w : "", []))
                        });
                        var W = [];
                        return J.each(C.State.calls, function (h, e) {
                            e && J.each(e[1], function (n, i) {
                                var a = w === S ? "" : w;
                                return a === !0 || e[2].queue === a || w === S && e[2].queue === !1 ? void J.each(ab, function (q, o) {
                                    o === i && ((w === !0 || G.isString(w)) && (J.each(J.queue(o, G.isString(w) ? w : ""), function (u, s) {
                                        G.isFunction(s) && s(null, !0)
                                    }), J.queue(o, G.isString(w) ? w : "", [])), "stop" === Z ? (P(o) && P(o).tweensContainer && a !== !1 && J.each(P(o).tweensContainer, function (u, s) {
                                        s.max = s.currentValue
                                    }), W.push(h)) : ("finish" === Z || "finishAll" === Z) && (e[2].duration = 1))
                                }) : !0
                            })
                        }), "stop" === Z && (J.each(W, function (h, e) {
                            K(e, !0)
                        }), Y.promise && Y.resolver(ab)), ag();
                    default:
                        if (!J.isPlainObject(Z) || G.isEmptyObject(Z)) {
                            if (G.isString(Z) && C.Redirects[Z]) {
                                var v = J.extend({}, w), r = v.duration, p = v.delay || 0;
                                return v.backwards === !0 && (ab = J.extend(!0, [], ab).reverse()), J.each(ab, function (h, e) {
                                    parseFloat(v.stagger) ? v.delay = p + parseFloat(v.stagger) * h : G.isFunction(v.stagger) && (v.delay = p + v.stagger.call(e, h, l)), v.drag && (v.duration = parseFloat(r) || (/^(callout|transition)/.test(Z) ? 1000 : E), v.duration = Math.max(v.duration * (v.backwards ? 1 - h / l : (h + 1) / l), 0.75 * v.duration, 200)), C.Redirects[Z].call(e, e, v || {}, h, l, ab, Y.promise ? Y : S)
                                }), ag()
                            }
                            var m = "Velocity: First argument (" + Z + ") was not a property map, a known action, or a registered redirect. Aborting.";
                            return Y.promise ? Y.rejecter(new Error(m)) : console.log(m), ag()
                        }
                        X = "start"
                }
                var k = {
                    lastParent: null,
                    lastPosition: null,
                    lastFontSize: null,
                    lastPercentToPxWidth: null,
                    lastPercentToPxHeight: null,
                    lastEmToPx: null,
                    remToPx: null,
                    vwToPx: null,
                    vhToPx: null
                }, g = [];
                J.each(ab, function (h, e) {
                    G.isNode(e) && af.call(e)
                });
                var d, v = J.extend({}, C.defaults, w);
                if (v.loop = parseInt(v.loop), d = 2 * v.loop - 1, v.loop) {
                    for (var c = 0; d > c; c++) {
                        var b = {delay: v.delay, progress: v.progress};
                        c === d - 1 && (b.display = v.display, b.visibility = v.visibility, b.complete = v.complete), z(ab, "reverse", b)
                    }
                }
                return ag()
            }
        };
        C = J.extend(z, C), C.animate = z;
        var y = U.requestAnimationFrame || H;
        return C.State.isMobile || T.hidden === S || T.addEventListener("visibilitychange", function () {
            T.hidden ? (y = function (b) {
                return setTimeout(function () {
                    b(!0)
                }, 16)
            }, L()) : y = U.requestAnimationFrame || H
        }), V.Velocity = C, V !== U && (V.fn.velocity = z, V.fn.velocity.defaults = C.defaults), J.each(["Down", "Up"], function (d, c) {
            C.Redirects["slide" + c] = function (w, v, u, t, s, r) {
                var q = J.extend({}, v), p = q.begin, o = q.complete, m = {
                    height: "",
                    marginTop: "",
                    marginBottom: "",
                    paddingTop: "",
                    paddingBottom: ""
                }, b = {};
                q.display === S && (q.display = "Down" === c ? "inline" === C.CSS.Values.getDisplayType(w) ? "inline-block" : "block" : "none"), q.begin = function () {
                    p && p.call(s, s);
                    for (var e in m) {
                        b[e] = w.style[e];
                        var a = C.CSS.getPropertyValue(w, e);
                        m[e] = "Down" === c ? [a, 0] : [0, a]
                    }
                    b.overflow = w.style.overflow, w.style.overflow = "hidden"
                }, q.complete = function () {
                    for (var a in b) {
                        w.style[a] = b[a]
                    }
                    o && o.call(s, s), r && r.resolver(s)
                }, C(w, m, q)
            }
        }), J.each(["In", "Out"], function (d, c) {
            C.Redirects["fade" + c] = function (s, r, q, p, o, n) {
                var m = J.extend({}, r), l = {opacity: "In" === c ? 1 : 0}, b = m.complete;
                m.complete = q !== p - 1 ? m.begin = null : function () {
                    b && b.call(o, o), n && n.resolver(o)
                }, m.display === S && (m.display = "In" === c ? "auto" : "none"), C(this, l, m)
            }
        }), C
    }(window.jQuery || window.Zepto || window, window, document)
});
angular.module("ion-number-picker", []).directive("ionNumberPicker", ["$timeout", "$window", "$compile", "$log", "$ionicGesture", "$ionicScrollDelegate", function (x, o, v, s, a, y) {
    var d = "inp-overlay";
    var A = "inp-drawer";
    var i = "inp-content";
    var h = "scroll";
    var e = 1;
    var j = 100;
    var w = 1;
    var u = 4000;
    var c = 20;
    var b = 67;
    var r = 40;
    var B = 0.15;
    var z = 0.3;
    var n = 5;
    var p = 15;
    var m = (o.innerHeight > o.innerWidth) ? (o.innerHeight * 40) / 100 : o.innerHeight;
    var q = 30;
    var t = null;
    var g = true;
    var l = 1;
    var f = function (E) {
        var D = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz".split("");
        if (!E) {
            E = Math.floor(Math.random() * D.length)
        }
        var F = "inp";
        for (var C = 0; C < E; C++) {
            F += D[Math.floor(Math.random() * D.length)]
        }
        return F
    };

    function k(G, R) {
        var E;
        var H = null;
        var K = null;
        var O = (m === o.innerHeight) ? 2 : 0;
        var ab = m - b + c;
        var S = Math.floor((ab / r) / 2);
        var P = (S * r) + c;
        var X = Math.ceil(ab / r) - O - S;
        var U = null;
        var J = function () {
            if (G.step === undefined || G.step === null || G.step === "") {
                G.step = w
            }
            if (G.min === undefined || G.min === null || G.min === "") {
                G.min = e
            }
            if (G.max === undefined || G.max === null || G.max === "") {
                G.max = (G.step > 0) ? j : -1 * j
            }
            if (G.sensitivity === undefined || G.sensitivity === null || G.sensitivity === "") {
                G.sensitivity = B
            }
            if (G.id === undefined || G.id === null || G.id === "") {
                U = f(5)
            } else {
                U = G.id + "-drawer"
            }
        };
        R.on("click", function () {
            G.openDrawer()
        });
        var V = '<div class="' + d + '" style="opacity:0;"></div>';
        J();
        G.transformedFriendlyName = function (ad) {
            var ac = ad.toString().replace(".", "_");
            return ac.toString().replace(",", "")
        };
        var D = '<div id="' + U + '"><div class="' + A + '" style="height: ' + m + 'px; transform: translateY(100%);"><div class="inp-nm-c" style="height: ' + ab + 'px;"><div class="inp-nm-cs" style="top: ' + P + 'px;"></div><ion-content class="' + i + '" overflow-scroll="false" has-bouncing="true" delegate-handle="' + U + '" on-scroll="cScroll()" on-scroll-complete="cScrollComplete()" style="height: ' + (ab - p) + 'px; width: 150px;" scrollbar-y="false"><div class="inp-nm-r"><div style="height:900px"><div class="inp-nm-n inp-nm{{transformedFriendlyName(element)}}" ng-class="{\'inp-nm-n-last\': $last}" ng-repeat="element in elements track by $index" ng-click="onElementClicked(\'inp-nm{{transformedFriendlyName(element)}}\', $index)">{{element}}</div></div></div></ion-content></div><div class="button-bar" ng-class="{\'inp-bb-2\': hasClear !== true, \'inp-bb-3\': hasClear === true}"><button class="button button-outline button-balanced inp-b" ng-if="hasClear" ng-click="clear()">Clear</button><button class="button button-outline button-calm inp-b inp-b-cancel" ng-click="closeDrawer()">Cancel</button><button class="button button-outline button-calm inp-b inp-b-set" ng-click="saveSelectionAndClose()">Set</button></div></div></div>';
        var L = function () {
            if ((isNaN(G.min) && G.min !== undefined && G.min !== null) || (isNaN(G.max) && G.max !== undefined && G.max !== null) || (isNaN(G.step) && G.step !== undefined && G.step !== null)) {
                s.error("make sure your values are a valid number! min value: " + G.min + " max value: " + G.max + " step: " + G.step);
                throw new Error("make sure your values are a valid number! min value: " + G.min + " max value: " + G.max + " step: " + G.step)
            }
            if (G.min > G.max && G.step > 0) {
                s.error("min value cannot be bigger than max value!");
                throw new Error("min value cannot be bigger than max value!")
            }
            if (G.min < G.max && G.step < 0) {
                s.error("min value cannot be bigger than max value!");
                throw new Error("min value cannot be bigger than max value!")
            }
            if (G.step > G.step.toFixed(2)) {
                s.error("step must not have more that three digits beyond decimal point!");
                throw new Error("step must not have more that three digits beyond decimal point!")
            }
            if ((G.max - G.min) > 0 && G.step <= 0) {
                s.error("step must be a legal number!");
                throw new Error("step must be a legal number!")
            }
            if (((G.max - G.min) / G.step) > u) {
                s.error("the maximum number of elements in list is " + u + "!");
                throw new Error("the maximum number of elements in list is " + u + "!")
            }
        };
        var Z = function (ac) {
            return angular.element(document.getElementById(ac))
        };
        var I = function (ac) {
            return angular.element(document.getElementsByClassName(ac))
        };
        var N = function (ad) {
            var ac = "#" + U + " ." + ad;
            return angular.element(document.querySelectorAll(ac))
        };
        var T = function () {
            var af = [];
            var ac = G.min;
            for (var ae = 0; ae < S; ae++) {
                af.push("")
            }
            if (G.step >= 0) {
                while (ac <= G.max) {
                    af.push(ac);
                    ac += G.step
                }
            } else {
                while (ac >= G.max) {
                    af.push(ac);
                    ac += G.step
                }
            }
            for (var ad = 0; ad < X; ad++) {
                af.push("")
            }
            G.elements = af
        };
        var W = function () {
            if (G.control) {
                G.control.openDrawer = function () {
                    G.openDrawer()
                };
                G.control.closeDrawer = function () {
                    G.closeDrawer()
                };
                G.control.getCurrentSelection = function () {
                    return (G.isDrawerOpen) ? G.elements[E + S] : G.ngModel
                };
                G.control.isDrawerOpen = function () {
                    return G.isDrawerOpen
                }
            }
        };
        var aa = function () {
            var ac = N(i);
            G.cScroll = function () {
                if (g && (l % q) === 0) {
                    var ad = Q();
                    if (ad > t) {
                        g = false;
                        F(t - 1, true)
                    } else {
                        if (E < 0) {
                            g = false;
                            F(0, true)
                        }
                    }
                }
                l++
            };
            G.cScrollComplete = function () {
                g = true;
                l = 1
            };
            a.on("drag", function (ad) {
                H = K;
                K = ad.gesture.center.pageY
            }, ac);
            a.on("dragend", function (ad) {
                var af = Math.abs(K - H) <= n;
                var ae = (ad.gesture.velocityY >= G.sensitivity && !af) ? ad.gesture.deltaTime * 9 : 0;
                x(function () {
                    var ag = Q(true);
                    if (ag !== null) {
                        F(ag, true)
                    }
                }, ae)
            }, ac)
        };
        var F = function (ac, ad) {
            var ae = ac * r;
            y.$getByHandle(U).scrollTo(0, ae, ad)
        };
        var M = function () {
            return G.elements.length - S - X
        };
        var Q = function (ag) {
            var af = null;
            var ad = N(h);
            var ak = o.getComputedStyle(ad[0], null);
            var ah = (ak.transform) ? ak.transform : ak["-webkit-transform"];
            if (ah) {
                var al = ah.split(",");
                var ae = parseFloat(al[al.length - 1]);
                var ac = ae / r;
                var aj = ac >= 0 && ac < 1;
                var ai = Math.abs(ac - parseInt(ac));
                var am = (ai >= z);
                var an = (am || aj) ? Math.floor : Math.ceil;
                E = Math.abs(an(ac));
                if (ag) {
                    if (E >= t) {
                        E = t - 1
                    }
                    if (E <= 0) {
                        E = 0
                    }
                }
                af = E
            }
            return af
        };
        var C = function (ad) {
            var ac = -1;
            G.elements.every(function (af, ae) {
                if ((G.step > 0 && af <= ad) || (G.step < 0 && af >= ad)) {
                    ac = ae - S;
                    return true
                } else {
                    return false
                }
            });
            return ac
        };
        G.isDrawerOpen = false;
        L();
        T();
        W();
        G.openDrawer = function () {
            var ad = I(d);
            var ae = N(A);
            if (ad.length <= 0) {
                angular.element(document.body).append(V);
                ad = I(d);
                v(ad)(G);
                Velocity(ad, {opacity: 0}, {duration: 0, display: "none"})
            }
            if (ae.length <= 0) {
                angular.element(document.body).append(D);
                ae = N(A);
                aa();
                v(ae)(G);
                Velocity(ae, {translateZ: 0, translateY: "100%"}, {duration: 0})
            }
            Velocity(ad, {opacity: 1}, {duration: 200, easing: "easeInSine", display: "inherit"});
            Velocity(ae, {translateZ: 0, translateY: 0}, {duration: 200, easing: "easeInSine"});
            var ac = (G.ngModel) ? G.ngModel : (G.ngDefault) ? G.ngDefault : G.min;
            E = C(ac);
            E = (E >= 0) ? E : 0;
            F(E, false);
            G.isDrawerOpen = true;
            t = M()
        };
        G.onElementClicked = function (ac, ad) {
            var ae = I(ac);
            var af = ad - S;
            if (af >= 0 && af < (G.elements.length - X - S)) {
                Velocity(ae, {backgroundColor: "#11c1f3", backgroundColorAlpha: 0.2}, {
                    duration: 100,
                    easing: "ease-in"
                });
                Velocity(ae, {backgroundColorAlpha: 0}, {duration: 200, easing: "ease-out"});
                F(af, true);
                E = af
            }
        };
        G.saveSelectionAndClose = function () {
            var ad = G.ngModel;
            var ae = G.elements[E + S];
            var ac = null;
            if (typeof G.onSet() === "function") {
                ac = G.onSet()(ad, ae)
            }
            if (ac !== false) {
                G.ngModel = ae;
                Y()
            }
            if (typeof G.ngChange === "function") {
                x(function () {
                    G.ngChange()
                }, 100)
            }
        };
        G.clear = function () {
            G.ngModel = null;
            if (typeof G.onClear() === "function") {
                G.onClear()()
            }
            Y()
        };
        G.closeDrawer = function () {
            if (typeof G.onCancel() === "function") {
                G.onCancel()()
            }
            Y()
        };
        var Y = function () {
            var ac = I(d);
            var ad = N(A);
            if (ac.length > 0) {
                Velocity(ac, {opacity: 0}, {duration: 200, display: "none", easing: "easeOutSine"})
            }
            if (ad.length > 0) {
                Velocity(ad, {translateZ: 0, translateY: "100%"}, {duration: 200, easing: "easeOutSine"})
            }
            G.isDrawerOpen = false
        }
    }

    return {
        restrict: "A",
        scope: {
            id: "@",
            sensitivity: "=",
            min: "=",
            max: "=",
            ngDefault: "=",
            step: "=",
            ngChange: "&",
            ngModel: "=",
            control: "=",
            hasClear: "=",
            onSet: "&",
            onCancel: "&",
            onClear: "&"
        },
        link: k
    }
}]);